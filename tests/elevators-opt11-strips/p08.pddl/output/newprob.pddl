( define ( problem elevators-sequencedstrips-p8_5_1 ) ( :domain elevators-sequencedstrips ) ( :objects 5 4 3 2 1 0 - num n0 n1 n2 n3 n4 n5 n6 n7 n8 - count p0 p2 p3 p4 - passenger fast0 - fast-elevator slow0-0 slow1-0 - slow-elevator ) ( :init ( next n0 n1 ) ( next n1 n2 ) ( next n2 n3 ) ( next n3 n4 ) ( next n4 n5 ) ( next n5 n6 ) ( next n6 n7 ) ( next n7 n8 ) ( above n0 n1 ) ( above n0 n2 ) ( above n0 n3 ) ( above n0 n4 ) ( above n0 n5 ) ( above n0 n6 ) ( above n0 n7 ) ( above n0 n8 ) ( above n1 n2 ) ( above n1 n3 ) ( above n1 n4 ) ( above n1 n5 ) ( above n1 n6 ) ( above n1 n7 ) ( above n1 n8 ) ( above n2 n3 ) ( above n2 n4 ) ( above n2 n5 ) ( above n2 n6 ) ( above n2 n7 ) ( above n2 n8 ) ( above n3 n4 ) ( above n3 n5 ) ( above n3 n6 ) ( above n3 n7 ) ( above n3 n8 ) ( above n4 n5 ) ( above n4 n6 ) ( above n4 n7 ) ( above n4 n8 ) ( above n5 n6 ) ( above n5 n7 ) ( above n5 n8 ) ( above n6 n7 ) ( above n6 n8 ) ( above n7 n8 ) ( lift-at fast0 n8 ) ( passengers fast0 n0 ) ( can-hold fast0 n1 ) ( can-hold fast0 n2 ) ( can-hold fast0 n3 ) ( reachable-floor fast0 n0 ) ( reachable-floor fast0 n2 ) ( reachable-floor fast0 n4 ) ( reachable-floor fast0 n6 ) ( reachable-floor fast0 n8 ) ( lift-at slow0-0 n0 ) ( passengers slow0-0 n0 ) ( can-hold slow0-0 n1 ) ( can-hold slow0-0 n2 ) ( reachable-floor slow0-0 n0 ) ( reachable-floor slow0-0 n1 ) ( reachable-floor slow0-0 n2 ) ( reachable-floor slow0-0 n3 ) ( reachable-floor slow0-0 n4 ) ( lift-at slow1-0 n4 ) ( passengers slow1-0 n0 ) ( can-hold slow1-0 n1 ) ( can-hold slow1-0 n2 ) ( reachable-floor slow1-0 n4 ) ( reachable-floor slow1-0 n5 ) ( reachable-floor slow1-0 n6 ) ( reachable-floor slow1-0 n7 ) ( reachable-floor slow1-0 n8 ) ( = ( travel-slow n0 n1 ) 6 ) ( = ( travel-slow n0 n2 ) 7 ) ( = ( travel-slow n0 n3 ) 8 ) ( = ( travel-slow n0 n4 ) 9 ) ( = ( travel-slow n1 n2 ) 6 ) ( = ( travel-slow n1 n3 ) 7 ) ( = ( travel-slow n1 n4 ) 8 ) ( = ( travel-slow n2 n3 ) 6 ) ( = ( travel-slow n2 n4 ) 7 ) ( = ( travel-slow n3 n4 ) 6 ) ( = ( travel-slow n4 n5 ) 6 ) ( = ( travel-slow n4 n6 ) 7 ) ( = ( travel-slow n4 n7 ) 8 ) ( = ( travel-slow n4 n8 ) 9 ) ( = ( travel-slow n5 n6 ) 6 ) ( = ( travel-slow n5 n7 ) 7 ) ( = ( travel-slow n5 n8 ) 8 ) ( = ( travel-slow n6 n7 ) 6 ) ( = ( travel-slow n6 n8 ) 7 ) ( = ( travel-slow n7 n8 ) 6 ) ( = ( travel-fast n0 n2 ) 7 ) ( = ( travel-fast n0 n4 ) 13 ) ( = ( travel-fast n0 n6 ) 19 ) ( = ( travel-fast n0 n8 ) 25 ) ( = ( travel-fast n2 n4 ) 7 ) ( = ( travel-fast n2 n6 ) 13 ) ( = ( travel-fast n2 n8 ) 19 ) ( = ( travel-fast n4 n6 ) 7 ) ( = ( travel-fast n4 n8 ) 13 ) ( = ( travel-fast n6 n8 ) 7 ) ( = ( total-cost ) 0 ) ( count p3 n0 1 ) ( count p3 n1 1 ) ( more 0 1 ) ( more 1 2 ) ( more 2 3 ) ( more 3 4 ) ( more 4 5 ) ( count p3 n2 0 ) ( count p3 n3 0 ) ( count p3 n4 0 ) ( count p3 n5 0 ) ( count p3 n6 0 ) ( count p3 n7 0 ) ( count p3 n8 0 ) ( count p0 n4 1 ) ( count p0 n0 0 ) ( count p0 n1 0 ) ( count p0 n2 0 ) ( count p0 n3 0 ) ( count p0 n5 0 ) ( count p0 n6 0 ) ( count p0 n7 0 ) ( count p0 n8 0 ) ( count p2 n1 1 ) ( count p2 n0 0 ) ( count p2 n2 0 ) ( count p2 n3 0 ) ( count p2 n4 0 ) ( count p2 n5 0 ) ( count p2 n6 0 ) ( count p2 n7 0 ) ( count p2 n8 0 ) ( count p4 n8 1 ) ( count p4 n0 0 ) ( count p4 n1 0 ) ( count p4 n2 0 ) ( count p4 n3 0 ) ( count p4 n4 0 ) ( count p4 n5 0 ) ( count p4 n6 0 ) ( count p4 n7 0 ) ( count p3 :objects 0 ) ( count p0 :objects 0 ) ( count p2 :objects 0 ) ( count p4 :objects 0 ) ( count p3 n0 0 ) ( count p0 n0 0 ) ( count p2 n0 0 ) ( count p4 n0 0 ) ( count p3 n1 0 ) ( count p0 n1 0 ) ( count p2 n1 0 ) ( count p4 n1 0 ) ( count p3 n2 0 ) ( count p0 n2 0 ) ( count p2 n2 0 ) ( count p4 n2 0 ) ( count p3 n3 0 ) ( count p0 n3 0 ) ( count p2 n3 0 ) ( count p4 n3 0 ) ( count p3 n4 0 ) ( count p0 n4 0 ) ( count p2 n4 0 ) ( count p4 n4 0 ) ( count p3 n5 0 ) ( count p0 n5 0 ) ( count p2 n5 0 ) ( count p4 n5 0 ) ( count p3 n6 0 ) ( count p0 n6 0 ) ( count p2 n6 0 ) ( count p4 n6 0 ) ( count p3 n7 0 ) ( count p0 n7 0 ) ( count p2 n7 0 ) ( count p4 n7 0 ) ) ( :goal ( and ( count p3 n2 2 ) ( count p0 n5 1 ) ( count p2 n8 1 ) ( count p4 n3 1 ) ) ) )